ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
for (i in range) {
day <- range[i]
print(day)
}
for(di in as.list(range)) {
print(di)
}
#install.packages("tidyverse")
require(ggplot2, quietly=TRUE) #Package for visualization and plotting of results
require(dplyr, quietly=TRUE, warn.conflicts = FALSE) #Package needed for mutate the date column
args<-commandArgs(TRUE)
args<-"2020-08-01"
total <- read.csv("../../covid-19/data/countries-aggregated.csv", header = T, sep = ",")
key <- subset(total, Country %in% c("China", "US", "United Kingdom", "Italy", "France", "Germany", "Spain", "Iran"), select = c(Date, Country, Confirmed))
key <- mutate(key, Date = as.Date(Date))
first <- key[1,1]
last <- key[nrow(key),1]
date1 <- as.Date(args[1])
if (! ( (date1 >= first+7) & (date1 <= last) ) ) {
date1 <- first+7
}
if ( is.na(args[2]) ) {
range<-c(date1)
} else {
date2 <- as.Date(args[2])
if (! ( (date2 >= first) & (date2 <= last) ) ) {
date2 <- last
}
step <- as.numeric(args[3])
range<-seq(date1, date2, step)
}
key1 <- key[key$Date >= first & key$Date <= last-7,]
key2 <- key[key$Date >= first+7 & key$Date <= last,]
from <- key1[,1]
to <- key2[,1]
country <- key1[,2]
entire <- key2[,3]
new <- key2[,3] - key1[,3]
exit1 <- data.frame(from, to, country, new, entire)
for(day in as.list(range)) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".png"),
plot = traj,
height = 7 , width = 12))
}
max(range)
max(range)==last
range
range<-c(range, last)
range
#install.packages("tidyverse")
require(ggplot2, quietly=TRUE) #Package for visualization and plotting of results
require(dplyr, quietly=TRUE, warn.conflicts = FALSE) #Package needed for mutate the date column
args<-commandArgs(TRUE)
args<-c("2020-08-01", "2020-09-10",5)
total <- read.csv("../../covid-19/data/countries-aggregated.csv", header = T, sep = ",")
key <- subset(total, Country %in% c("China", "US", "United Kingdom", "Italy", "France", "Germany", "Spain", "Iran"), select = c(Date, Country, Confirmed))
key <- mutate(key, Date = as.Date(Date))
first <- key[1,1]
last <- key[nrow(key),1]
date1 <- as.Date(args[1])
if (! ( (date1 >= first+7) & (date1 <= last) ) ) {
date1 <- first+7
}
if ( is.na(args[2]) ) {
range<-c(date1)
} else {
date2 <- as.Date(args[2])
if (! ( (date2 >= first) & (date2 <= last) ) ) {
date2 <- last
}
step <- as.numeric(args[3])
range<-seq(date1, date2, step)
if (max(range) != last) {
range<-c(range, last)
}
}
key1 <- key[key$Date >= first & key$Date <= last-7,]
key2 <- key[key$Date >= first+7 & key$Date <= last,]
from <- key1[,1]
to <- key2[,1]
country <- key1[,2]
entire <- key2[,3]
new <- key2[,3] - key1[,3]
exit1 <- data.frame(from, to, country, new, entire)
for(day in as.list(range)) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".png"),
#       plot = traj,
#       height = 7 , width = 12))
suppressWarnings(print(traj))
}
#install.packages("tidyverse")
require(ggplot2, quietly=TRUE) #Package for visualization and plotting of results
require(dplyr, quietly=TRUE, warn.conflicts = FALSE) #Package needed for mutate the date column
args<-commandArgs(TRUE)
args<-c("2020-06-01", "2020-07-29",5)
total <- read.csv("../../covid-19/data/countries-aggregated.csv", header = T, sep = ",")
key <- subset(total, Country %in% c("China", "US", "United Kingdom", "Italy", "France", "Germany", "Spain", "Iran"), select = c(Date, Country, Confirmed))
key <- mutate(key, Date = as.Date(Date))
first <- key[1,1]
last <- key[nrow(key),1]
date1 <- as.Date(args[1])
if (! ( (date1 >= first+7) & (date1 <= last) ) ) {
date1 <- first+7
}
if ( is.na(args[2]) ) {
range<-c(date1)
} else {
date2 <- as.Date(args[2])
if (! ( (date2 >= first) & (date2 <= last) ) ) {
date2 <- last
}
step <- as.numeric(args[3])
range<-seq(date1, date2, step)
if (max(range) != last) {
range<-c(range, last)
}
}
key1 <- key[key$Date >= first & key$Date <= last-7,]
key2 <- key[key$Date >= first+7 & key$Date <= last,]
from <- key1[,1]
to <- key2[,1]
country <- key1[,2]
entire <- key2[,3]
new <- key2[,3] - key1[,3]
range
if ( is.na(args[2]) ) {
range<-c(date1)
} else {
date2 <- as.Date(args[2])
if (! ( (date2 >= first) & (date2 <= last) ) ) {
date2 <- last
}
step <- as.numeric(args[3])
range<-seq(date1, date2, step)
if (max(range) != last) {
range<-c(range, date2)
}
}
range
key1 <- key[key$Date >= first & key$Date <= last-7,]
key2 <- key[key$Date >= first+7 & key$Date <= last,]
from <- key1[,1]
to <- key2[,1]
country <- key1[,2]
entire <- key2[,3]
new <- key2[,3] - key1[,3]
exit1 <- data.frame(from, to, country, new, entire)
for(day in as.list(range)) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".png"),
#       plot = traj,
#       height = 7 , width = 12))
suppressWarnings(print(traj))
}
y<-1
y<-y+1
y<-y+1
y<-y+1
y<-y+1
require(gridextra, quietly=TRUE) #Package for visualization and plotting of results
#install.packages("tidyverse")
install.packages("gridExtra")
require(gridextra, quietly=TRUE) #Package for visualization and plotting of results
require(gridExtra, quietly=TRUE) #Package for visualization and plotting of results
#install.packages("tidyverse")
#install.packages("gridExtra")
require(ggplot2, quietly=TRUE) #Package for visualization and plotting of results
require(gridExtra, quietly=TRUE) #Package for visualization and plotting of results
require(dplyr, quietly=TRUE, warn.conflicts = FALSE) #Package needed for mutate the date column
args<-commandArgs(TRUE)
args<-c("2020-06-20", "2020-07-03",3)
total <- read.csv("../../covid-19/data/countries-aggregated.csv", header = T, sep = ",")
key <- subset(total, Country %in% c("China", "US", "United Kingdom", "Italy", "France", "Germany", "Spain", "Iran"), select = c(Date, Country, Confirmed))
key <- mutate(key, Date = as.Date(Date))
first <- key[1,1]
last <- key[nrow(key),1]
date1 <- as.Date(args[1])
if (! ( (date1 >= first+7) & (date1 <= last) ) ) {
date1 <- first+7
}
if ( is.na(args[2]) ) {
range<-c(date1)
} else {
date2 <- as.Date(args[2])
if (! ( (date2 >= first) & (date2 <= last) ) ) {
date2 <- last
}
step <- as.numeric(args[3])
range<-seq(date1, date2, step)
if (max(range) != last) {
range<-c(range, date2)
}
}
key1 <- key[key$Date >= first & key$Date <= last-7,]
key2 <- key[key$Date >= first+7 & key$Date <= last,]
from <- key1[,1]
to <- key2[,1]
country <- key1[,2]
entire <- key2[,3]
new <- key2[,3] - key1[,3]
exit1 <- data.frame(from, to, country, new, entire)
i <- 1
plotlist <- list()
for(day in as.list(range)) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".png"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
plotlist[[i]] <- traj
i <- i+1
}
View(plotlist)
print(plotlist[1])
for(day in as.list(range)) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".png"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
plotlist[[day]] <- traj
i <- i+1
}
plotlist
l = mget(plotlist)
ggsave("arrange.pdf", arrangeGrob(grobs = plotlist))
ggsave("arrange.pdf", plotlist)
ggsave("arrange.pdf", marrangeGrob(grobs = plotlist, nrow=2, ncol=2))
pdf("all.pdf")
plotlist
dev.off()
pdf("all.pdf", height = 7, width = 12)
plotlist
dev.off()
pdf("all.pdf", height = 7, width = 12)
suppressWarnings(plotlist)
dev.off()
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
#install.packages("tidyverse")
require(ggplot2, quietly=TRUE) #Package for visualization and plotting of results
require(dplyr, quietly=TRUE, warn.conflicts = FALSE) #Package needed for mutate the date column
total <- read.csv("../../covid-19/data/countries-aggregated.csv", header = T, sep = ",")
key <- subset(total, Country %in% c("China", "US", "United Kingdom", "Italy", "France", "Germany", "Spain", "Iran"), select = c(Date, Country, Confirmed))
key <- mutate(key, Date = as.Date(Date))
first <- key[1,1]
last <- key[nrow(key),1]
range<-seq(first+7, last, 1)
key1 <- key[key$Date >= first & key$Date <= last-7,]
key2 <- key[key$Date >= first+7 & key$Date <= last,]
from <- key1[,1]
to <- key2[,1]
country <- key1[,2]
entire <- key2[,3]
new <- key2[,3] - key1[,3]
exit1 <- data.frame(from, to, country, new, entire)
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, show.legend = TRUE)
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, show.legend = TRUE)
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, show.legend = TRUE)
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, show.legend = TRUE) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e7)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, show.legend = TRUE) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e8)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, linetype="dashed") +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e8)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
a
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, linetype="dashed") +
annotate("text", label = "exponential growth", 10, 10)
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e8)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, linetype="dashed") +
annotate("text", label = "exponential growth", 10, 10) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e8)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
for(day in as.list(range[30])) {
exit2 <- exit1[exit1$to <= day,]
exit3 <- exit2[exit2$to == day,]
traj <- ggplot(exit2, aes(x=entire, y=new)) +
geom_abline(slope = 1, intercept = 0, linetype="dashed") +
annotate("text", label = "exponential growth", x=1e7, y=1e8) +
geom_line(aes(colour = factor(country)), size = 0.5) +
geom_point(data=exit3, aes(x=entire, y=new, colour = factor(country)), size = 2) +
scale_x_log10(limits = c(1,1e8)) +
scale_y_log10(limits = c(1,1e8)) +
labs(colour = "Country") +
ylab("New Confirmed Cases (Last Week)") +
xlab("Total Confirmed Cases") +
ggtitle(paste("Trajectory of Confirmed Cases (", day ,")")) +
theme(plot.title = element_text(hjust=0.5))
print(traj)
#suppressWarnings(ggsave(filename = paste("../Plots/trajectory_of_confirmed_cases_", day, ".pdf"),
#       plot = traj,
#       height = 7 ,
#       width = 12))
}
